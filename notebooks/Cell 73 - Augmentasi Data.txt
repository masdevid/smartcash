# Cell 73: Augmentasi Data (refactored)

import gc
import pickle
from IPython.display import display

# Import UI components dan handlers
from smartcash.ui_components.augmentation_components import create_augmentation_ui
from smartcash.handlers.ui_handlers.augmentation_handlers import setup_augmentation_handlers

# ===== 1. LOAD KOMPONEN GLOBAL =====
# Pastikan objek global tersedia
try:
    with open('data_globals.pkl', 'rb') as f:
        globals_dict = pickle.load(f)
    
    data_manager = globals_dict['data_manager']
    aug_manager = globals_dict['aug_manager']
    config = globals_dict['config']
    logger = globals_dict['logger']
    
    logger.info("‚úÖ Komponen global berhasil dimuat")
except Exception as e:
    print(f"‚ùå Error loading global objects: {str(e)}")
    print("üí° Jalankan Cell 7.1 terlebih dahulu untuk menginisialisasi dataset")
    # Fallback ke placeholder objects jika diperlukan untuk testing UI
    data_manager = None
    aug_manager = None
    config = {}
    
    import logging
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger("augmentation")

# ===== 2. CEK ENVIRONMENT =====
# Deteksi apakah berjalan di Google Colab
is_colab = 'google.colab' in str(get_ipython())

# ===== 3. BUAT DAN SETUP UI =====
# Buat UI komponen
ui_components = create_augmentation_ui(is_colab=is_colab)

# Setup handlers jika komponen tersedia
if data_manager and aug_manager:
    setup_augmentation_handlers(
        ui_components=ui_components,
        aug_manager=aug_manager,
        data_manager=data_manager,
        logger=logger
    )
else:
    logger.warning("‚ö†Ô∏è Komponen data_manager atau aug_manager tidak tersedia!")
    print("‚ö†Ô∏è UI dibuat tetapi fungsi tidak akan berjalan sampai komponen diperlukan tersedia.")

# ===== 4. TAMPILKAN UI =====
# Tampilkan UI
display(ui_components['ui'])

# Force garbage collection
gc.collect()