# File: configs/base_config.yaml
# Deskripsi: Konfigurasi dasar terupdate untuk sistem SmartCash dengan YOLOv5-EfficientNet-B4 integration

# Informasi project
project:
  name: 'SmartCash'  
  version: '2.2.0'
  description: 'Sistem deteksi denominasi mata uang YOLOv5 dengan EfficientNet-B4 backbone'
  author: 'Alfrida Sabar'
  research_mode: true

# Konfigurasi Google Drive integration
drive:
  use_drive: false
  sync_on_start: true
  sync_strategy: 'drive_priority'  # 'drive_priority' | 'local_priority' | 'newest' | 'merge'
  symlinks: false
  backup_on_sync: true
  paths:
    smartcash_dir: 'SmartCash'
    configs_dir: 'configs'
    data_dir: 'data'
    runs_dir: 'runs'
    logs_dir: 'logs'
    models_dir: 'models'  # Untuk pretrained models

# Struktur data dengan UUID support  
data:
  # Direktori utama (path relatif)
  dir: 'data'
  raw_dir: 'data/raw'
  augmented_dir: 'data/augmented'
  preprocessed_dir: 'data/preprocessed'
  
  # Dataset split configuration
  split_ratios:
    train: 0.7
    valid: 0.15
    test: 0.15
  stratified_split: true
  random_seed: 42
  
  # Data source configuration
  source: 'roboflow'  # 'roboflow' | 'local'
  roboflow:
    api_key: ''  # Diisi oleh user atau dari Google Secret
    workspace: 'smartcash-wo2us'
    project: 'rupiah-emisi-2022'
    version: '3'
    output_format: 'yolov5pytorch'
  
  # File naming dengan UUID support
  file_naming:
    uuid_format: true
    naming_pattern: '{prefix}_{nominal}_{uuid}_{variance:03d}'  # untuk augmented files
    preserve_original: true
    case_sensitivity: false

# Model configuration alignment
model:
  # Backbone options: 'cspdarknet' (baseline) | 'efficientnet_b4' (enhanced)
  backbone: 'efficientnet_b4'
  model_name: 'smartcash_yolov5'
  
  # Detection layers
  detection_layers: ['banknote']  # Primary: banknote detection
  layer_mode: 'single'  # 'single' | 'multilayer'
  
  # Model parameters
  num_classes: 7  # 7 denominasi mata uang
  img_size: 640
  confidence_threshold: 0.25
  iou_threshold: 0.45
  
  # Feature optimization (configurable)
  feature_optimization:
    enabled: false  # Default disabled
    use_attention: false
    use_fpn: true
    use_pan: true

# Training configuration
training:
  epochs: 100
  learning_rate: 0.001
  weight_decay: 0.0005
  batch_size: 32
  num_workers: 4
  pin_memory: true
  
  # Early stopping
  early_stopping: true
  patience: 10
  
  # Optimizer & Scheduler
  optimizer: 'adam'  # 'adam' | 'sgd'
  scheduler: 'cosine'  # 'cosine' | 'step' | 'plateau'
  
  # Validation
  val_interval: 1
  save_best: true
  save_interval: 10

# Pretrained models configuration  
pretrained_models:
  models_dir: '/content/models'
  drive_models_dir: '/content/drive/MyDrive/SmartCash/models'
  
  models:
    yolov5:
      name: 'YOLOv5s'
      url: 'https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5s.pt'
      filename: 'yolov5s.pt'
      min_size_mb: 10
      description: 'Object detection backbone'
      
    efficientnet_b4:
      name: 'EfficientNet-B4'
      url: 'https://huggingface.co/timm/efficientnet_b4.ra2_in1k/resolve/main/pytorch_model.bin'
      filename: 'efficientnet_b4_huggingface.bin'
      min_size_mb: 60
      description: 'Feature extraction backbone'

# Checkpoint configuration
checkpoint:
  save_dir: '/data/checkpoints'
  format: 'best_{model_name}_{backbone}_{layer_mode}_{date}.pt'
  max_checkpoints: 5
  auto_cleanup: true

# Device configuration
device:
  auto_detect: true
  preferred: 'cuda'  # 'cuda' | 'cpu'
  mixed_precision: true
  fallback_to_cpu: true

# Cache configuration
cache:
  dir: '.cache/smartcash'
  pretrained_cache: '.cache/smartcash/pretrained'
  dataset_cache: '.cache/smartcash/dataset'
  auto_cleanup: true
  max_size_gb: 5

# Logging configuration  
logging:
  level: 'INFO'  # 'DEBUG' | 'INFO' | 'WARNING' | 'ERROR'
  progress_tracking: true
  metrics_tracking: true
  save_logs: true
  log_dir: '/data/logs'
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  
  # Emoji logging untuk debugging yang fun
  use_emojis: true
  colors:
    success: 'green'
    warning: 'orange'  
    error: 'red'
    info: 'blue'
    metrics: 'cyan'

# Progress tracking configuration
progress:
  steps:
    init: {value: 0, label: 'Inisialisasi'}
    data_prep: {value: 10, label: 'Persiapan data'}
    model_build: {value: 20, label: 'Membangun model'}
    pretrained_load: {value: 30, label: 'Loading pretrained weights'}
    training_start: {value: 40, label: 'Memulai training'}
    training_progress: {value: 60, label: 'Training berlangsung'}
    validation: {value: 80, label: 'Validasi model'}
    checkpoint_save: {value: 90, label: 'Menyimpan checkpoint'}
    complete: {value: 100, label: 'Proses selesai'}

# Research scenarios configuration
research:
  scenarios:
    backbone_comparison:
      description: 'Perbandingan performa CSPDarknet vs EfficientNet-B4'
      backbones: ['cspdarknet', 'efficientnet_b4']
      metrics: ['mAP', 'inference_time', 'precision', 'recall', 'F1']
      
    feature_optimization:
      description: 'Studi ablasi feature optimization'
      variants: ['basic', 'attention', 'attention_residual']
      metrics: ['mAP', 'inference_time']
      
    position_variation:
      description: 'Evaluasi variasi posisi pengambilan gambar'
      positions: ['frontal', 'angled', 'partial', 'multiple']
      metrics: ['detection_accuracy', 'confidence_score']

# Security & validation
validation:
  required_files: ['model_config.yaml', 'backbone_config.yaml']
  required_dirs: ['data/preprocessed', 'data/checkpoints']
  auto_create_dirs: true
  
# Augmentation configuration alignment  
augmentation:
  enabled: true
  output_dir: 'data/augmented'
  techniques:
    - 'rotation'
    - 'brightness'
    - 'contrast'
    - 'blur'
    - 'noise'
  variance_per_image: 5  # Jumlah variasi per gambar original