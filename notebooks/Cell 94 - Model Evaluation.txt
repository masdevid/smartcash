# Cell 94 - Model Evaluation (refactored)

import os
import sys
import gc
import torch
from pathlib import Path
from IPython.display import display

# Pastikan path diatur dengan benar
if os.getcwd() not in sys.path:
    sys.path.append(os.getcwd())

# Import komponen UI dan handlers
from smartcash.ui_components.evaluation_components import create_evaluation_ui
from smartcash.ui_handlers.evaluation_handlers import setup_evaluation_handlers

# ===== 1. LOAD COMPONENTS =====
# Memuat komponen dari training
try:
    import pickle
    with open('training_components.pkl', 'rb') as f:
        components = pickle.load(f)
    
    # Memuat konfigurasi
    with open('config.pkl', 'rb') as f:
        config = pickle.load(f)
    
    # Setup logger
    from smartcash.utils.logger import get_logger
    logger = get_logger("model_evaluation", log_to_console=True, log_to_file=True, log_to_colab=True)
    logger.info("‚úÖ Modul evaluasi berhasil dimuat")
    
    # Import komponen evaluasi
    from smartcash.handlers.evaluation_handler import EvaluationHandler
    evaluation_handler = EvaluationHandler(config=config, logger=logger)
    
    # Import visualizer untuk visualisasi metrics
    try:
        from smartcash.utils.model_visualizer import ModelVisualizer
        visualizer = ModelVisualizer(logger=logger)
        visualizer_available = True
        logger.info("üìä Visualizer tersedia untuk visualisasi metrik")
    except ImportError:
        try:
            from smartcash.utils.visualization import ResultVisualizer
            visualizer = ResultVisualizer()
            visualizer_available = True
            logger.info("üìä Visualizer tersedia untuk visualisasi metrik")
        except ImportError:
            visualizer = None
            visualizer_available = False
            logger.warning("‚ö†Ô∏è Visualizer tidak tersedia, menggunakan tampilan sederhana")
except Exception as e:
    print(f"‚ö†Ô∏è Komponen evaluasi belum diinisialisasi: {str(e)}")
    print("‚ÑπÔ∏è Jalankan Cell 9.1 terlebih dahulu untuk menginisialisasi pipeline")
    components = {}
    config = {}
    logger = None
    evaluation_handler = None
    visualizer = None
    visualizer_available = False
    
    # Setup dasar logger jika tidak ada
    import logging
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
    logger = logging.getLogger("model_evaluation")

# Buat UI komponen
ui_components = create_evaluation_ui()

# Ambil checkpoint handler dari komponen jika tersedia
checkpoint_handler = components.get('checkpoint_handler') if 'checkpoint_handler' in components else None

# Setup handlers untuk komponen UI
setup_evaluation_handlers(
    ui_components=ui_components,
    evaluation_handler=evaluation_handler,
    checkpoint_handler=checkpoint_handler,
    visualizer=visualizer,
    config=config,
    logger=logger
)

# Tampilkan UI
display(ui_components['ui'])