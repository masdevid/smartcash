# Cell 9.3: Training Execution (refactored) - Menjalankan training model dengan visualisasi real-time

import torch
import gc
import pickle
from IPython.display import display
import os

# Import UI components dan handlers
from smartcash.ui_components.training_components import create_training_ui
from smartcash.handlers.ui_handlers.training_handlers import setup_training_handlers

# ===== 1. LOAD KOMPONEN TRAINING =====
try:
    # Memuat komponen dari pickle
    with open('training_components.pkl', 'rb') as f:
        components = pickle.load(f)
    
    pipeline = components.get('pipeline')
    model_handler = components.get('model_handler')
    checkpoint_handler = components.get('checkpoint_handler')
    experiment_tracker = components.get('experiment_tracker')
    dataloaders = components.get('dataloaders')
    
    with open('config.pkl', 'rb') as f:
        config = pickle.load(f)
    
    # Import logger
    from smartcash.utils.logger import get_logger
    logger = get_logger("training_execution", log_to_console=True, log_to_file=True, log_to_colab=True)
    logger.success("✅ Komponen training berhasil dimuat")
    
except Exception as e:
    print(f"⚠️ Komponen training belum diinisialisasi: {str(e)}")
    print("ℹ️ Jalankan Cell 9.1 terlebih dahulu untuk menginisialisasi pipeline")
    
    # Fallback ke nilai default untuk demo UI
    components = {}
    pipeline = None
    model_handler = None
    checkpoint_handler = None
    experiment_tracker = None
    dataloaders = {}
    config = {}
    
    import logging
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger("training_execution")

# ===== 2. CEK ENVIRONMENT =====
# Deteksi apakah berjalan di Google Colab
is_colab = 'google.colab' in str(get_ipython())

# ===== 3. BUAT UI =====
# Buat UI components
ui_components = create_training_ui(config=config, is_colab=is_colab)

# ===== 4. SETUP HANDLERS =====
# Setup handlers jika komponen diperlukan tersedia
if pipeline and dataloaders and checkpoint_handler:
    # Setup handlers dan dapatkan metrics tracker
    metrics_tracker, updated_ui = setup_training_handlers(
        ui_components=ui_components,
        pipeline=pipeline,
        dataloaders=dataloaders,
        checkpoint_handler=checkpoint_handler,
        config=config, 
        logger=logger
    )
else:
    logger.warning("⚠️ Komponen pipeline, dataloaders, atau checkpoint_handler tidak tersedia!")
    print("⚠️ UI dibuat tetapi fungsi tidak akan berjalan sampai komponen yang diperlukan tersedia.")

# ===== 5. TAMPILKAN UI =====
# Tampilkan UI
display(ui_components['ui'])

# ===== 6. CLEANUP =====
# Bersihkan memori
gc.collect()
torch.cuda.empty_cache() if torch.cuda.is_available() else None