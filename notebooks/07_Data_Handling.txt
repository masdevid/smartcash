# ================= [DATA HANDLING] =================
# Cell 7: Setup Data Pipeline
class DataManager:
    """Pengelola data SmartCash"""
    
    def __init__(self, config):
        self.config = config
        self.logger = SmartCashLogger("data_manager")
        
        # Inisialisasi DataHandler
        self.data_handler = DataHandler(config=config)
        
    def get_dataloaders(self, batch_size=None):
        """Dapatkan DataLoader untuk training, validation, dan testing"""
        batch_size = batch_size or self.config.get('training', {}).get('batch_size', 16)
        num_workers = min(4, self.config.get('model', {}).get('workers', 4))
        
        self.logger.info(f"ðŸ”„ Mempersiapkan dataloader dengan batch size {batch_size}, workers {num_workers}")
        
        # Dapatkan dataloaders
        train_loader = self.data_handler.get_train_loader(
            batch_size=batch_size, 
            num_workers=num_workers
        )
        
        val_loader = self.data_handler.get_val_loader(
            batch_size=batch_size,
            num_workers=num_workers
        )
        
        test_loader = self.data_handler.get_test_loader(
            batch_size=batch_size,
            num_workers=2  # Kurangi workers untuk pengujian
        )
        
        dataloaders = {
            'train': train_loader,
            'val': val_loader,
            'test': test_loader
        }
        
        for name, loader in dataloaders.items():
            self.logger.info(f"ðŸ“¦ {name.capitalize()} dataset: {len(loader)} batches")
            
        return dataloaders