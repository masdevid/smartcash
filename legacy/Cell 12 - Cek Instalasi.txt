# Cell 1.2 - Cek Instalasi

# ===== 3. SETUP COLAB ENVIRONMENT =====
def setup_colab_environment():
    """Setup Google Colab environment if running in Colab"""
    try:
        from google.colab import drive
        IN_COLAB = True
        print("‚úÖ Berjalan di Google Colab")
        
        # Mount Google Drive
        if not Path('/content/drive/MyDrive').exists():
            print("üîÑ Mencoba mount Google Drive...")
            drive.mount('/content/drive')
        print("‚úÖ Google Drive berhasil di-mount!")
        
        return True, '/content/drive/MyDrive/SmartCash'
    except ImportError:
        print("‚ÑπÔ∏è Tidak berjalan di Google Colab")
        return False, os.getcwd()

# ===== 4. SETUP LOGGING =====
def setup_logging():
    """Setup logging configuration"""
    try:
        from smartcash.utils.logger import get_logger, SmartCashLogger
        logger = get_logger("notebook", log_to_console=True, log_to_file=True, log_to_colab=IN_COLAB)
    except Exception as e:
        print(f"‚ö†Ô∏è Gagal mengimpor SmartCashLogger: {str(e)}")
        print("‚ö†Ô∏è Menggunakan logger standard...")
        logging.basicConfig(
            level=logging.INFO,
            format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
            handlers=[
                logging.FileHandler(f"logs/smartcash_{datetime.now().strftime('%Y-%m-%d')}.log"),
                logging.StreamHandler(sys.stdout)
            ]
        )
        from smartcash.utils.simple_logger import SimpleLogger
        logger = SimpleLogger("notebook")
    return logger

# ===== 5. SETUP DIRECTORIES =====
def setup_directories(base_dir):
    """Setup necessary directories for the project"""
    dirs = [
        "data/train/images",
        "data/train/labels",
        "data/valid/images",
        "data/valid/labels",
        "data/test/images",
        "data/test/labels",
        "configs",
        "runs/train/weights",
        "logs"
    ]
    
    for d in dirs:
        os.makedirs(f"{base_dir}/{d}", exist_ok=True)
    
    return base_dir

# ===== 6. INITIALIZE GLOBAL VARIABLES =====
# Setup Colab environment
IN_COLAB, BASE_DIR = setup_colab_environment()

# Setup directories
BASE_DIR = setup_directories(BASE_DIR)

# Setup logging
logger = setup_logging()

# Setup device
DEVICE = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

# ===== 7. DISPLAY ENVIRONMENT INFO =====
print("\nüîç Informasi Lingkungan:")
print(f"üìä PyTorch: {torch.__version__}")
print(f"üñ•Ô∏è CUDA tersedia: {torch.cuda.is_available()}")
if torch.cuda.is_available():
    print(f"üöÄ CUDA Device: {torch.cuda.get_device_name(0)}")
    print(f"üß† CUDA Memory: {torch.cuda.get_device_properties(0).total_memory / 1e9:.2f} GB")
else:
    print("‚ö†Ô∏è CUDA tidak tersedia, menggunakan CPU")

print(f"\nüìÇ Base Directory: {BASE_DIR}")

# Save base directory for other cells
import pickle
with open('base_dir.pkl', 'wb') as f:
    pickle.dump(BASE_DIR, f)

logger.info("‚ú® Setup global berhasil dilakukan")