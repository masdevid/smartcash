# File: configs/model_config.yaml
# Author: Alfrida Sabar
# Deskripsi: Konfigurasi khusus untuk model deteksi dengan EfficientNet-B4 sebagai backbone

# Konfigurasi detail model
model:
  # Type model
  type: 'efficient_basic'  # Tipe model: 'efficient_basic' atau 'yolov5s'
  
  # Backbone model
  backbone: 'efficientnet_b4'  # Backbone yang didukung: 'efficientnet_b4' atau 'cspdarknet_s'
  backbone_pretrained: true
  backbone_weights: ''  # Path ke file weights kustom (kosong untuk menggunakan default pretrained)
  backbone_freeze: false  # Freeze backbone selama training
  backbone_unfreeze_epoch: 5  # Unfreeze backbone setelah epoch ini
  
  # Ukuran input dan preprocessing
  input_size: [640, 640]
  
  # Thresholds
  confidence: 0.25  # Confidence threshold untuk deteksi
  iou_threshold: 0.45  # IoU threshold untuk NMS
  max_detections: 100  # Jumlah maksimum deteksi yang dihasilkan
  
  # Transfer learning
  transfer_learning: true
  pretrained: true
  pretrained_weights: ''  # Path ke file weights YOLOv5 (kosong untuk menggunakan default)
  
  # Processing
  anchors: [10,13, 16,30, 33,23, 30,61, 62,45, 59,119, 116,90, 156,198, 373,326]
  strides: [8, 16, 32]
  workers: 4  # Jumlah worker untuk dataloader
  
  # Spesifikasi model
  depth_multiple: 0.67  # Faktor skala untuk kedalaman model (YOLOv5s)
  width_multiple: 0.75  # Faktor skala untuk lebar model (YOLOv5s)
  
  # Integrasi khusus untuk SmartCash
  use_efficient_blocks: true  # Gunakan blok EfficientNet di FPN/PAN
  use_adaptive_anchors: true  # Adaptasi anchors berdasarkan dataset
  
  # Optimasi model
  quantization: false
  quantization_aware_training: false  # Gunakan QAT untuk model lebih ringan
  fp16_training: true  # Gunakan mixed precision untuk training
  
  # Fitur optimasi tambahan
  use_attention: false  # Gunakan FeatureAdapter (Attention) untuk adaptasi feature maps
  use_residual: false  # Gunakan ResidualAdapter untuk koneksi residual tambahan
  use_ciou: false      # Gunakan CIoU Loss untuk bounding box regression

# EfficientNet-B4 specific parameters
efficientnet:
  width_coefficient: 1.4
  depth_coefficient: 1.8
  resolution: 380
  dropout_rate: 0.4
  
# Transfer learning parameters
transfer_learning:
  enabled: true
  freeze_backbone: false
  freeze_batch_norm: false
  unfreeze_after_epochs: 10
  
# Regularisasi khusus model
regularization:
  label_smoothing: 0.0  # Label smoothing untuk mengurangi overfitting

# Konfigurasi kompilasi model untuk deployment
export:
  formats: ['onnx', 'torchscript']  # Format export
  dynamic_batch: true  # Dukung dynamic batch size untuk deployment
  optimize: true  # Optimasi model saat ekspor
  half_precision: true  # Gunakan half precision (FP16)
  simplify: true  # Simplifikasi graph ONNX

# Konfigurasi khusus untuk uji coba model
experiments:
  # Daftar backbone yang dibandingkan (sesuai SUPPORTED_BACKBONES)
  backbones:
    - name: 'cspdarknet_s'
      description: 'YOLOv5s default backbone'
      config:
        backbone: 'cspdarknet_s'
        pretrained: true
    
    - name: 'efficientnet_b4'
      description: 'EfficientNet-B4 backbone'
      config:
        backbone: 'efficientnet_b4'
        pretrained: true
  
  # Skenario uji coba (sesuai model yang didukung)
  scenarios:
    - name: 'yolov5s'
      description: 'YOLOv5s dengan CSPDarknet sebagai backbone (model pembanding)'
      config:
        type: 'yolov5s'
        backbone: 'cspdarknet_s'
        use_attention: false
        use_residual: false
        use_ciou: false
    
    - name: 'efficient_basic'
      description: 'Model dasar dengan EfficientNet-B4 tanpa optimasi khusus'
      config:
        type: 'efficient_basic'
        backbone: 'efficientnet_b4'
        use_attention: false
        use_residual: false
        use_ciou: false
    
    - name: 'efficient_advanced'
      description: 'Model dengan semua optimasi: FeatureAdapter, ResidualAdapter, dan CIoU'
      config:
        backbone: 'efficientnet_b4'
        use_attention: true
        use_residual: true
        use_ciou: true

# Konfigurasi training
training:
  epochs: 100
  batch_size: 16
  early_stopping_patience: 10
  optimizer: 'Adam'
  lr: 0.001
  weight_decay: 0.0005
  momentum: 0.937
  lr_scheduler: 'ReduceLROnPlateau'
  lr_patience: 3
  lr_factor: 0.1
  save_best_only: false  # Hanya menyimpan model terbaik
  save_every: 0  # Simpan checkpoint setiap N epoch (0 = disable)

# Konfigurasi data
data:
  dir: 'data'  # Direktori utama data
  preprocessed_dir: 'data/preprocessed'  # Direktori untuk hasil preprocessed
  split_ratios:  # Rasio split dataset
    train: 0.7
    valid: 0.15
    test: 0.15
  stratified_split: true  # Gunakan stratified split
  random_seed: 42  # Random seed untuk reproduksibilitas

# Konfigurasi checkpoint
checkpoint:
  save_dir: 'checkpoints'  # Direktori untuk menyimpan checkpoint
  save_interval: 10  # Interval penyimpanan checkpoint
  save_last: true  # Simpan checkpoint terakhir
  save_best: true  # Simpan checkpoint terbaik