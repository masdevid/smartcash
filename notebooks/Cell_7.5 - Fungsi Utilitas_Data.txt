# Cell 7.5: Fungsi Utilitas Data

def get_dataloaders(batch_size=None):
    """
    Dapatkan dataloader untuk training, validation, dan testing
    
    Args:
        batch_size: Ukuran batch untuk dataloader (jika None, gunakan default dari config)
        
    Returns:
        Dictionary berisi dataloaders untuk train, val, dan test
    """
    batch_size = batch_size or config.get('training', {}).get('batch_size', 16)
    num_workers = min(2, config.get('model', {}).get('workers', 2))  # Jumlah worker dibatasi untuk Colab
    
    logger.info(f"Mempersiapkan dataloaders dengan batch size {batch_size}, workers {num_workers}")
    
    # Dapatkan dataloaders
    train_loader = data_handler.get_train_loader(
        batch_size=batch_size, 
        num_workers=num_workers
    )
    
    val_loader = data_handler.get_val_loader(
        batch_size=batch_size,
        num_workers=num_workers
    )
    
    test_loader = data_handler.get_test_loader(
        batch_size=batch_size,
        num_workers=1  # Kurangi workers untuk pengujian
    )
    
    dataloaders = {
        'train': train_loader,
        'val': val_loader,
        'test': test_loader
    }
    
    # Log informasi tentang dataloaders
    for name, loader in dataloaders.items():
        logger.info(f"{name.capitalize()} dataloader: {len(loader)} batches")
    
    return dataloaders

def check_data_availability():
    """
    Memeriksa ketersediaan data dan menampilkan statistik
    
    Returns:
        Boolean yang menunjukkan apakah data tersedia untuk training
    """
    sizes = data_handler.get_dataset_sizes()
    
    # Tampilkan informasi
    logger.info("🔍 Memeriksa ketersediaan data...")
    for split, count in sizes.items():
        status = "✅ Tersedia" if count > 0 else "❌ Tidak tersedia"
        logger.info(f"{split.capitalize()}: {count} gambar - {status}")
    
    # Periksa apakah data cukup untuk training
    if sizes.get('train', 0) > 0 and sizes.get('val', 0) > 0:
        logger.success("✅ Data tersedia untuk training dan validasi")
        return True
    else:
        if sizes.get('train', 0) == 0:
            logger.warning("⚠️ Data training tidak tersedia")
        if sizes.get('val', 0) == 0:
            logger.warning("⚠️ Data validasi tidak tersedia")
        
        logger.info("💡 Gunakan tab 'Split Dataset' untuk menyiapkan data training dan validasi")
        return False

def get_class_names():
    """
    Dapatkan nama kelas yang digunakan dalam dataset
    
    Returns:
        List nama kelas
    """
    return data_handler.get_class_names()

# Tampilkan status ketersediaan data
check_data_availability()

print("\n✅ Semua fungsi utilitas data telah siap digunakan")
print("💡 Gunakan get_dataloaders() untuk mendapatkan dataloader untuk training")