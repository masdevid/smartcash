# Cell 7.5: Fungsi Utilitas Data (refactored)

import pickle
from IPython.display import display, HTML

# Import komponen UI
from smartcash.ui_components.data_components import create_data_utils_ui

# Import handler
from smartcash.handlers.ui_handlers.data_handlers import (
    check_data_availability,
    visualize_batch
)

# Pastikan objek global tersedia
try:
    with open('data_globals.pkl', 'rb') as f:
        globals_dict = pickle.load(f)
    
    data_manager = globals_dict['data_manager']
    logger = globals_dict['logger']
except Exception as e:
    print(f"❌ Error loading global objects: {str(e)}")
    print("💡 Jalankan Cell 7.1 terlebih dahulu untuk menginisialisasi dataset")

# Buat UI untuk fungsi utilitas
utils_ui = create_data_utils_ui()

# Setup handler untuk tombol visualisasi
utils_ui['visualize_button'].on_click(
    lambda b: visualize_batch(
        data_manager, 
        split=utils_ui['split_dropdown'].value,
        num_images=utils_ui['num_images_slider'].value,
        logger=logger
    )
)

# Tampilkan UI
display(utils_ui['ui'])

# Tampilkan status ketersediaan data
print("🔍 Memeriksa ketersediaan data...")
data_available = check_data_availability(data_manager, logger)

# Dapatkan dan tampilkan nama kelas
try:
    from smartcash.utils.layer_config_manager import get_layer_config
    
    layer_config = get_layer_config()
    active_layers = globals_dict['config'].get('layers', ['banknote'])
    
    class_names = []
    for layer in active_layers:
        layer_config_data = layer_config.get_layer_config(layer)
        if layer_config_data and 'classes' in layer_config_data:
            class_names.extend(layer_config_data['classes'])
    
    print(f"\n🏷️ Kelas yang tersedia ({len(class_names)}):")
    if class_names:
        # Tampilkan dalam format grid
        cols = 3
        class_grid = [class_names[i:i+cols] for i in range(0, len(class_names), cols)]
        for row in class_grid:
            print("  " + "  |  ".join(row))
    else:
        print("  Tidak ada kelas yang tersedia")
except Exception as e:
    print(f"❌ Error mendapatkan nama kelas: {str(e)}")

print("\n✅ Semua fungsi utilitas data telah siap digunakan")
print("💡 Gunakan tombol 'Visualisasi Batch' untuk menampilkan contoh gambar dari dataset")