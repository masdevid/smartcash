# Cell 8.1: Model initialization (refactored)

import os
import torch
import gc
import logging
import sys
from pathlib import Path
from contextlib import contextmanager

# Impor komponen UI dan handler
from smartcash.ui_components.model_components import create_model_initialization_ui
from smartcash.handlers.ui_handlers.model_handlers import setup_model_initialization_handlers

# ===== 1. ENVIRONMENT SETUP =====
# Add smartcash to PYTHONPATH
if not os.getcwd() in sys.path:
    sys.path.append(os.getcwd())

# Create necessary directories
os.makedirs("logs", exist_ok=True)
os.makedirs("checkpoints", exist_ok=True)
os.makedirs("exports", exist_ok=True)

# Setup logger
try:
    from smartcash.utils.logger import get_logger
    logger = get_logger("model_manager", log_to_console=True, log_to_file=True, log_to_colab=True)
    logger.info("‚úÖ Logger initialized successfully")
except Exception as e:
    print(f"‚ö†Ô∏è Failed to import SmartCashLogger: {str(e)}")
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
    from smartcash.utils.simple_logger import SimpleLogger
    logger = SimpleLogger("model_manager")

# ===== 2. MODEL IMPORTS =====
try:
    # Import model handler
    from smartcash.handlers.model_handler import ModelHandler
    
    # Load configurations if available
    try:
        with open('config.pkl', 'rb') as f:
            import pickle
            config = pickle.load(f)
    except:
        # Use default config if not available
        config = {
            'model': {
                'backbone': 'efficientnet',
                'num_classes': 17,
                'img_size': [640, 640]
            },
            'layers': ['banknote']
        }
    
    # Initialize model handler
    model_handler = ModelHandler(
        config=config,
        logger=logger
    )
    
    # Save config if needed
    with open('config.pkl', 'wb') as f:
        pickle.dump(config, f)
        
    logger.success("üöÄ Model modules imported successfully")
except Exception as e:
    logger.error(f"‚ùå Failed to import model modules: {str(e)}")
    raise

# ===== 3. CREATE AND DISPLAY UI =====
# Create UI components
ui_components = create_model_initialization_ui()

# Setup handlers
setup_model_initialization_handlers(ui_components, model_handler, config, logger)

# Display UI
display(ui_components['ui'])