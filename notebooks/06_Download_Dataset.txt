# Cell 6: Download Dataset Menggunakan API Roboflow (Versi Ringkas)
import os
import yaml
import ipywidgets as widgets
from IPython.display import display

# Import RoboflowDownloader dari modul utils
from smartcash.smartcash.utils.roboflow_downloader import download_dataset_from_roboflow

# Tombol download dataset
download_button = widgets.Button(
    description='Download Dataset',
    button_style='info',
    icon='download'
)

# Tambahkan checkbox untuk force download
force_download_checkbox = widgets.Checkbox(
    value=False,
    description='Paksa download ulang',
    disabled=False
)

def on_download_button_clicked(b):
    """Callback untuk download dataset menggunakan Roboflow API"""
    # Disable tombol saat proses berlangsung
    download_button.disabled = True
    download_button.description = "Sedang Mengunduh..."
    
    try:
        # Load konfigurasi
        config_path = 'configs/experiment_config.yaml'
        if os.path.exists(config_path):
            with open(config_path, 'r') as f:
                config = yaml.safe_load(f)
        else:
            with open('configs/base_config.yaml', 'r') as f:
                config = yaml.safe_load(f)
        
        # Verifikasi konfigurasi minimum
        if not config.get('data', {}).get('roboflow', {}).get('api_key'):
            print("‚ùå API key tidak ditemukan dalam konfigurasi")
            print("üí° Tip: Gunakan tombol 'Simpan Konfigurasi' untuk menyimpan API key")
            download_button.disabled = False
            download_button.description = "Download Dataset"
            return
            
        # Jalankan proses download menggunakan fungsi dari modul
        force = force_download_checkbox.value
        results = download_dataset_from_roboflow(config, force=force)
        
        if results['success']:
            # Tampilkan statistik akhir jika sukses
            stats = results['stats'].get('final', results['stats'].get('existing', {}))
            
            # Update tombol untuk menunjukkan selesai
            download_button.button_style = "success"
            download_button.description = "Download Selesai"
            download_button.icon = "check"
        else:
            print("\n‚ö†Ô∏è Proses download tidak berhasil diselesaikan")
            # Reset tombol
            download_button.disabled = False
            download_button.description = "Download Dataset"
            download_button.button_style = "danger"
            
    except Exception as e:
        print(f"‚ùå Error saat proses download: {str(e)}")
        # Reset tombol
        download_button.disabled = False
        download_button.description = "Download Dataset"
        download_button.button_style = "danger"

download_button.on_click(on_download_button_clicked)

# Tampilkan widgets dalam layout vertical
display(widgets.VBox([force_download_checkbox, download_button]))

print("üí° Tip: Centang 'Paksa download ulang' jika ingin mengunduh dataset baru meskipun sudah ada yang tersedia.")